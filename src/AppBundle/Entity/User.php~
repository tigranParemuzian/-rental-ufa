<?php

namespace AppBundle\Entity;

use AppBundle\Traits\File;
use Doctrine\ORM\Mapping as ORM;
use FOS\UserBundle\Entity\User as BaseUser;
use JMS\Serializer\Annotation\Groups;
use JMS\Serializer\Annotation\VirtualProperty;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Context\ExecutionContext;
use Symfony\Component\Validator\Context\ExecutionContextInterface;
use Gedmo\Mapping\Annotation as Gedmo;

/**
 *
 * @ORM\Table(name="fos_user")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\UserRepository")
 * @ORM\HasLifecycleCallbacks()
 * @UniqueEntity("phone")
 */
class User extends BaseUser
{
    use File;

    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     * @Groups({"booking_history", "user-info"})
     *
     */
    protected $id;

    /**
     * @var
     * @ORM\Column(name="first_name", type="string", nullable=true)
     * @Groups({"user-info", "booking_list"})
     */
    private $firstName;

    /**
     * @var
     * @ORM\Column(name="last_name", type="string", nullable=true)
     * @Groups({"user-info", "booking_list"})
     */
    private $lastName;

    /**
     * @var
     * @ORM\Column(name="patronymic", type="string", nullable=true)
     * @Groups({"user-info", "booking_list"})
     */
    private $patronymic;

    /**
     * @var
     * @ORM\Column(name="contract", type="string", length=255, nullable=true)
     */
    private $contract;

    /**
     * @var
     * @ORM\Column(name="contract_cost", type="string", length=255, nullable=true)
     */
    private $contractCost;

    /**
     * @var
     * @ORM\Column(name="payment_date", type="datetime", nullable=true)
     */
    private $paymentDate;

    /**
     * @var
     * @ORM\Column(name="inhabited", type="boolean")
     */
    private $inhabited;

    /**
     * @var
     * @ORM\Column(name="database_permission", type="boolean")
     */
    private $databasePermission;

    /**
     * @var
     * @ORM\Column(name="sent_password", type="boolean")
     */
    private $sentPassword;

    /**
     * @var
     * @ORM\Column(name="problematic", type="boolean")
     */
    private $problematic;

    /**
     * @var
     * @ORM\Column(name="phone", type="string", length=20 , nullable=false, unique=true)
     * @Assert\NotBlank(message="user.phone.not_blank", groups={"Registration", "Profile"})
     * @Assert\Length(
     *     min=9,
     *     max=13,
     *     minMessage="user.phone.minLength",
     *     maxMessage="user.phone.maxLength",
     *     groups={"Registration", "Profile"}
     * )
     * @Groups({"user-info", "booking_list"})
     */
    private $phone;

    public function __toString()
    {
        return $this->id ? $this->username : '';
//        return parent::__toString(); // TODO: Change the autogenerated stub
    }

    public function __construct()
    {
        parent::__construct();
        $this->problematic = false;
        $this->sentPassword = true;
        $this->databasePermission = false;
        $this->inhabited = false;
        $this->paymentDate = new \DateTime('now');

    }

    /**
     * @VirtualProperty()
     *
     * @Groups({"user-info", "booking_list"})
     */
    public function getClientFullName() {

        return $this->firstName . ' ' . $this->lastName;
    }
}
