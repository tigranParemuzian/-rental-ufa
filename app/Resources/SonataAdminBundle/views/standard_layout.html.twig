{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}
{% set _preview              = block('preview') is defined ? block('preview') : null %}
{% set _form                 = block('form') is defined ? block('form') : null %}
{% set _show                 = block('show') is defined ? block('show') : null %}
{% set _list_table           = block('list_table') is defined ? block('list_table') : null %}
{% set _list_filters         = block('list_filters') is defined ? block('list_filters') : null %}
{% set _tab_menu             = block('tab_menu') is defined ? block('tab_menu') : null %}
{% set _content              = block('content') is defined ? block('content') : null %}
{% set _title                = block('title') is defined ? block('title') : null %}
{% set _breadcrumb           = block('breadcrumb') is defined ? block('breadcrumb') : null %}
{% set _actions              = block('actions') is defined ? block('actions') : null %}
{% set _navbar_title         = block('navbar_title') is defined ? block('navbar_title') : null %}
{% set _list_filters_actions = block('list_filters_actions') is defined ? block('list_filters_actions') : null %}

<!DOCTYPE html>
<html {% block html_attributes %}class="no-js"{% endblock %}>
<head>
    {% block meta_tags %}
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta charset="UTF-8">
        <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>
    {% endblock %}

    {% block stylesheets %}
        {% for stylesheet in sonata_admin.adminPool.getOption('stylesheets', []) %}
            <link rel="stylesheet" href="{{ asset(stylesheet) }}">
        {% endfor %}
        <link rel="stylesheet" type="text/css" href="{{ asset('jquery_components/dropzone/dist/dropzone.css') }}">
        <link rel="stylesheet" type="text/css" href="{{ asset('jquery_components/darkroom/build/darkroom.css') }}">
        <link rel="stylesheet" type="text/css" href="{{ asset('bundles/app/admin/style.css') }}">
    {% endblock %}

    {% block javascripts %}
    {% block sonata_javascript_config %}
        <script>
            window.SONATA_CONFIG = {
                CONFIRM_EXIT: {% if sonata_admin.adminPool.getOption('confirm_exit') %}true{% else %}false{% endif %},
                USE_SELECT2: {% if sonata_admin.adminPool.getOption('use_select2') %}true{% else %}false{% endif %},
                USE_ICHECK: {% if sonata_admin.adminPool.getOption('use_icheck') %}true{% else %}false{% endif %},
                USE_STICKYFORMS: {% if sonata_admin.adminPool.getOption('use_stickyforms') %}true{% else %}false{% endif %}
            };
            window.SONATA_TRANSLATIONS = {
                CONFIRM_EXIT:  '{{ 'confirm_exit'|trans({}, 'SonataAdminBundle')|escape('js') }}'
            };

            // http://getbootstrap.com/getting-started/#support-ie10-width
            if (navigator.userAgent.match(/IEMobile\/10\.0/)) {
                var msViewportStyle = document.createElement('style');
                msViewportStyle.appendChild(document.createTextNode('@-ms-viewport{width:auto!important}'));
                document.querySelector('head').appendChild(msViewportStyle);
            }
        </script>
    {% endblock %}

    {% block sonata_javascript_pool %}
        {% for javascript in sonata_admin.adminPool.getOption('javascripts', []) %}
        <script src="{{ asset(javascript) }}"></script>
        {% endfor %}
    {% endblock %}

        {% set locale = app.request.locale %}
        {# localize moment #}
        {% if locale[:2] != 'en' %}
        <script src="{{ asset('bundles/sonatacore/vendor/moment/locale/' ~ locale|replace({'_':'-'}) ~ '.js') }}"></script>
        {% endif %}

        {# localize select2 #}
        {% if sonata_admin.adminPool.getOption('use_select2') %}
        {% if locale == 'pt' %}{% set locale = 'pt_PT' %}{% endif %}

        {# omit default EN locale #}
        {% if locale[:2] != 'en' %}
        <script src="{{ asset('bundles/sonatacore/vendor/select2/select2_locale_' ~ locale|replace({'_':'-'}) ~ '.js') }}"></script>
        {% endif %}
        {% endif %}
    {% endblock %}

    <title>
        {% block sonata_head_title %}
            {{ 'Admin'|trans({}, 'SonataAdminBundle') }}

            {% if _title is not empty %}
                {{ _title|raw }}
            {% else %}
                {% if action is defined %}
                    -
                    {% for menu in breadcrumbs_builder.breadcrumbs(admin, action) %}
                        {% if not loop.first %}
                            {%  if loop.index != 2 %}
                                &gt;
                            {% endif %}

                            {%- set translation_domain = menu.extra('translation_domain', 'messages') -%}
                            {%- set label = menu.label -%}
                            {%- if translation_domain is not same as(false) -%}
                                {%- set label = label|trans(menu.extra('translation_params', {}), translation_domain) -%}
                            {%- endif -%}

                            {{ label }}
                        {% endif %}
                    {% endfor %}
                {% endif %}
            {% endif%}
        {% endblock %}
    </title>
</head>
<body {% block body_attributes %}class="sonata-bc skin-black fixed"{% endblock %}>

<div class="wrapper">

    {% block sonata_header %}
        <header class="main-header">
            {% block sonata_header_noscript_warning %}
                <noscript>
                    <div class="noscript-warning">
                        {{ 'noscript_warning'|trans({}, 'SonataAdminBundle') }}
                    </div>
                </noscript>
            {% endblock %}
            {% block logo %}
                {% spaceless %}
                    <a class="logo" href="{{ path('sonata_admin_dashboard') }}">
                        {% if 'single_image' == sonata_admin.adminPool.getOption('title_mode') or 'both' == sonata_admin.adminPool.getOption('title_mode') %}
                            <img src="{{ asset(sonata_admin.adminPool.titlelogo) }}" alt="{{ sonata_admin.adminPool.title }}">
                        {% endif %}
                        {% if 'single_text' == sonata_admin.adminPool.getOption('title_mode') or 'both' == sonata_admin.adminPool.getOption('title_mode') %}
                            <span>{{ sonata_admin.adminPool.title }}</span>
                        {% endif %}
                    </a>
                {% endspaceless %}
            {% endblock %}
            {% block sonata_nav %}
                <nav class="navbar navbar-static-top" role="navigation">
                    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button">
                        <span class="sr-only">Toggle navigation</span>
                    </a>

                    <div class="navbar-left">
                        {% block sonata_breadcrumb %}
                            <div class="hidden-xs">
                                {% if _breadcrumb is not empty or action is defined %}
                                    <ol class="nav navbar-top-links breadcrumb">
                                        {% if _breadcrumb is empty %}
                                            {% if action is defined %}
                                                {% for menu in breadcrumbs_builder.breadcrumbs(admin, action) %}
                                                    {%- set translation_domain = menu.extra('translation_domain', 'messages') -%}
                                                    {%- set label = menu.label -%}
                                                    {%- if translation_domain is not same as(false) -%}
                                                        {%- set label = label|trans(menu.extra('translation_params', {}), translation_domain) -%}
                                                    {%- endif -%}

                                                    {% if not loop.last  %}
                                                        <li>
                                                            {% if menu.uri is not empty %}
                                                                <a href="{{ menu.uri }}">
                                                                    {% if menu.extra('safe_label', true) %}
                                                                        {{- label|raw -}}
                                                                    {% else %}
                                                                        {{- label -}}
                                                                    {% endif %}
                                                                </a>
                                                            {% else %}
                                                                {{ label }}
                                                            {% endif %}
                                                        </li>
                                                    {% else %}
                                                        <li class="active"><span>{{ label }}</span></li>
                                                    {% endif %}
                                                {% endfor %}
                                            {% endif %}
                                        {% else %}
                                            {{ _breadcrumb|raw }}
                                        {% endif %}
                                    </ol>
                                {% endif %}
                            </div>
                        {% endblock sonata_breadcrumb %}
                    </div>

                    {% block sonata_top_nav_menu %}
                        {% if app.user and is_granted('ROLE_SONATA_ADMIN') %}
                            <div class="navbar-custom-menu">
                                <ul class="nav navbar-nav">
                                    {% block sonata_top_nav_menu_add_block %}
                                        <li class="dropdown">
                                            <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                                <i class="fa fa-plus-square fa-fw" aria-hidden="true"></i> <i class="fa fa-caret-down" aria-hidden="true"></i>
                                            </a>
                                            {% include sonata_admin.adminPool.getTemplate('add_block') %}
                                        </li>
                                    {% endblock %}
                                    {% block sonata_top_nav_menu_user_block %}
                                        <li class="dropdown user-menu">
                                            <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                                <i class="fa fa-user fa-fw" aria-hidden="true"></i> <i class="fa fa-caret-down" aria-hidden="true"></i>
                                            </a>
                                            <ul class="dropdown-menu dropdown-user">
                                                <li style="text-align: center">
                                                    <span class="glyphicon glyphicon-user"></span>&nbsp;{{ app.user.firstName ~' '~app.user.lastName }}
                                                </li>
                                                <li style="text-align: center">
                                                    <a href="{{ path('fos_user_security_logout') }}"><span class="glyphicon glyphicon-log-out"></span> <span>Logout</span>

                                                    </a>
                                                </li>
                                                {% include sonata_admin.adminPool.getTemplate('user_block') %}
                                            </ul>
                                        </li>
                                    {% endblock %}
                                </ul>
                            </div>
                        {% endif %}
                    {% endblock %}
                </nav>
            {% endblock sonata_nav %}
        </header>
    {% endblock sonata_header %}

    {% block sonata_wrapper %}
        {% block sonata_left_side %}
            <aside class="main-sidebar">
                <section class="sidebar">
                    {% block sonata_side_nav %}
                        {% block sonata_sidebar_search %}
                            <form action="{{ path('sonata_admin_search') }}" method="GET" class="sidebar-form" role="search">
                                <div class="input-group custom-search-form">
                                    <input type="text" name="q" value="{{ app.request.get('q') }}" class="form-control" placeholder="{{ 'search_placeholder'|trans({}, 'SonataAdminBundle') }}">
                                            <span class="input-group-btn">
                                                <button class="btn btn-flat" type="submit">
                                                    <i class="fa fa-search" aria-hidden="true"></i>
                                                </button>
                                            </span>
                                </div>
                            </form>
                        {% endblock sonata_sidebar_search %}

                        {% block side_bar_before_nav %} {% endblock %}
                        {% block side_bar_nav %}
                            {{ knp_menu_render('sonata_admin_sidebar', {template: sonata_admin.adminPool.getTemplate('knp_menu_template')}) }}
                        {% endblock side_bar_nav %}
                        {% block side_bar_after_nav %}
                            <p class="text-center small" style="border-top: 1px solid #444444; padding-top: 10px">
                                {% block side_bar_after_nav_content %}
                                    <p class="text-center" style="color: white">
                                        <span class="glyphicon glyphicon-user"></span>&nbsp;Привет!&nbsp;{{ app.user.firstName ~' '~app.user.lastName }}
                                    </p>
                                {% endblock %}
                            </p>
                        {% endblock %}
                    {% endblock sonata_side_nav %}
                </section>
            </aside>
        {% endblock sonata_left_side %}

        <div class="content-wrapper">
            {% block sonata_page_content %}
                <section class="content-header">

                    {% block sonata_page_content_header %}
                        {% block sonata_page_content_nav %}
                            {% if _tab_menu is not empty or _actions is not empty or _list_filters_actions is not empty %}
                                <nav class="navbar navbar-default" role="navigation">
                                    <div class="container-fluid">
                                        {% block tab_menu_navbar_header %}
                                            {% if _navbar_title is not empty %}
                                                <div class="navbar-header">
                                                    <a class="navbar-brand" href="#">{{ _navbar_title|raw }}</a>
                                                </div>
                                            {% endif %}
                                        {% endblock %}

                                        <div class="navbar-collapse">
                                            <div class="navbar-left">
                                                {% if _tab_menu is not empty %}
                                                    {{ _tab_menu|raw }}
                                                {% endif %}
                                            </div>

                                            {% if admin is defined and action is defined and action == 'list' and admin.listModes|length > 1 %}
                                                <div class="nav navbar-right btn-group">
                                                    {% for mode, settings in admin.listModes %}
                                                        <a href="{{ admin.generateUrl('list', app.request.query.all|merge({_list_mode: mode})) }}" class="btn btn-default navbar-btn btn-sm{% if admin.getListMode() == mode %} active{% endif %}"><i class="{{ settings.class }}"></i></a>
                                                    {% endfor %}
                                                </div>
                                            {% endif %}

                                            {% block sonata_admin_content_actions_wrappers %}
                                                {% if _actions|replace({ '<li>': '', '</li>': '' })|trim is not empty %}
                                                    <ul class="nav navbar-nav navbar-right">
                                                        {% if _actions|split('</a>')|length > 2 %}
                                                            <li class="dropdown sonata-actions">
                                                                <a href="#" class="dropdown-toggle" data-toggle="dropdown">{{ 'link_actions'|trans({}, 'SonataAdminBundle') }} <b class="caret"></b></a>
                                                                <ul class="dropdown-menu" role="menu">
                                                                    {{ _actions|raw }}
                                                                </ul>
                                                            </li>
                                                        {% else %}
                                                            {{ _actions|raw }}
                                                        {% endif %}
                                                    </ul>
                                                {% endif %}
                                            {% endblock sonata_admin_content_actions_wrappers %}

                                            {% if _list_filters_actions is not empty %}
                                                {{ _list_filters_actions|raw }}
                                            {% endif %}
                                        </div>
                                    </div>
                                </nav>
                            {% endif %}
                        {% endblock sonata_page_content_nav %}
                    {% endblock sonata_page_content_header %}
                </section>

                <section class="content">
                    {% block sonata_admin_content %}

                        {% block notice %}
                            {% include 'SonataCoreBundle:FlashMessage:render.html.twig' %}
                        {% endblock notice %}

                        {% if _preview is not empty %}
                            <div class="sonata-ba-preview">{{ _preview|raw }}</div>
                        {% endif %}

                        {% if _content is not empty %}
                            <div class="sonata-ba-content">{{ _content|raw }}</div>
                        {% endif %}

                        {% if _show is not empty %}
                            <div class="sonata-ba-show">{{ _show|raw }}</div>
                        {% endif %}

                        {% if _form is not empty %}
                            <div class="sonata-ba-form">{{ _form|raw }}</div>
                        {% endif %}

                        {% if _list_table is not empty or _list_filters is not empty %}
                            {% if _list_filters|trim %}
                                <div class="row">
                                    {{ _list_filters|raw }}
                                </div>
                            {% endif %}

                            <div class="row">
                                {{ _list_table|raw }}
                            </div>

                        {% endif %}
                    {% endblock sonata_admin_content %}
                </section>
            {% endblock sonata_page_content %}
        </div>
    {% endblock sonata_wrapper %}
</div>

<div class="modal fade" id="imagemodal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel"></h4>
            </div>
            <div class="modal-body">
                <img src="" id="imagepreview" style="width: 550px;" >
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

{% if sonata_admin.adminPool.getOption('use_bootlint') %}
    {% block bootlint %}
        {# Bootlint - https://github.com/twbs/bootlint#in-the-browser #}
        <script type="text/javascript">
            javascript:(function(){var s=document.createElement("script");s.onload=function(){bootlint.showLintReportForCurrentDocument([], {hasProblems: false, problemFree: false});};s.src="https://maxcdn.bootstrapcdn.com/bootlint/latest/bootlint.min.js";document.body.appendChild(s)})();
        </script>
        <script src="{{ asset('bundles/ivoryckeditor/adapters/jquery.js') }}" type="text/javascript"></script>
        <script src="{{ asset('bundles/ivoryckeditor/ckeditor.js') }}" type="text/javascript"></script>
        <script type="text/javascript">
            $(function() {
                $('textarea.ckeditor').ckeditor();
            });
        </script>
    {% endblock %}
{% endif %}

<script type="text/javascript" src="{{ asset('jquery_components/dropzone/dist/dropzone.js') }}"></script>
<script src="{{ asset('jquery_components/darkroom/demo/vendor/fabric.js') }}"></script>
<script src="{{ asset('jquery_components/darkroom/build/darkroom.js') }}"></script>

<script type="text/javascript">

    $( document ).ready(function() {
        ajaxImages();
        $('a[img-data="true"]').on('click',function (e) {

           var t = $(this).children('img').attr('src');
           $('#imagepreview').attr({src:t});

        })
    });
    {% set rl = -1 %}
    {% if object is defined and admin.classnameLabel == 'Car' and admin.subject is not null %}
    {% if object.id is not null %}{% set rl = object.id %}{% endif %}
    {% endif %}

    var position = 0, rl = '{{ rl }}', images = [], env='';

    {% if app.environment == 'dev' %} env = '/app_dev.php' {% else %} env = '' {% endif %} ;

    var removeElem = document.createElement('i');
    removeElem.setAttribute('class', 'fa fa-times fa-fw');

    myDropzone = new Dropzone("#image-dropzone",
        {
            url: env + "/api/admins/images",
            addRemoveLinks: true,
            dictDefaultMessage:'Drop files here to upload',
            maxFilesize: 30000,
            thumbnailWidth: 300,
            thumbnailHeight: 100,
            resizeWidth: 1920,
            resizeHeight: 890,
            maxFiles:20,
            dictRemoveFile: 'x',
            clickable: true,
            init:function(){
                $(this).on('success', function(file) {
                    console.log(file);
                    var mockFile = { name: "myimage.jpg", size: 12345, type: 'image/jpeg' , objectId:'id', position:'position', side:'side' };
                    this.addFile.call(this, mockFile);
                    this.options.thumbnail.call(this, mockFile, "http://someserver.com/myimage.jpg");
                    console.log(file);
                    file.objectId = response.id;
                    file.position = position;
                    file.isMain = response.is_main;
                    file.side = response.side;

                    var edit = document.createElement('button');
                    edit.setAttribute('class', 'edit-btn text-info');
                    edit.setAttribute('type',"button");
                    edit.setAttribute('onclick', "editImage("+response.id+")");
                    edit.innerHTML = '<i class="fa fa-crop fa-fw"></i>';
                   ;

                    var check = '';

                    if(response.is_main == true){
                        check = 'checked';
                    }

                    var isMain = document.createElement('label');
                    isMain.setAttribute('class', 'is-main-image');
                    isMain.innerHTML = '<input class="is-main" type="radio" name="isMani" onclick="imageToMain('+response.id+')" ' +
                        check +
                        '> Is Main';

                })
            },
            removedfile: function(file) {
                ajaxDeleteImage(file.objectId);
                var ref;
                if (file.previewElement) {
                    if ((ref = file.previewElement) != null) {
                        ref.parentNode.removeChild(file.previewElement);
                    }
                }
                return this._updateMaxFilesReachedClass();
            }
        });


    $("#image-dropzone").sortable({
        items:'.dz-preview',
        cursor: 'move',
        opacity: 0.8,
        containment: '#image-dropzone',
        distance: 20,
        tolerance: 'pointer'
    });

    myDropzone.on('sending', function(file, xhr, formData){
        position ++;
        formData.append('side', file.side);
        formData.append('position', position);
        formData.append('realty', rl);
    });

    /**
     * TODO: when add file
     *
     **/
    myDropzone.on("success", function(file, response) {


        file.objectId = response.id;
        file.position = position;
        file.isMain = response.is_main;
        file.side = response.side;
        images.push(file);

        var edit = document.createElement('button');
        edit.setAttribute('class', 'edit-btn text-info');
        edit.setAttribute('type',"button");
        edit.setAttribute('onclick', "editImage("+response.id+")");
        edit.innerHTML = '<i class="fa fa-crop fa-fw"></i>';

        var arraySides = ['left', 'right', 'front', 'back', 'inside', 'panorama', 'other'];

        var sides = document.createElement('div');
        sides.setAttribute('class', 'form-group image-side');
        sides.innerHTML =''  ;
        var info = '<label for="sel1">Side:</label><select class="form-control" onchange="changeSide('+response.id+', this.value)">';
        $.each(arraySides, function (key, value) {
            var isSelectrd = '';

            if(key == response.side){
                isSelectrd ='selected';
            }

            info += '<option value="'+key+'" '+isSelectrd+'>'+value+'</option>';
            if(key == (arraySides.length -1)){
                info+='</select>';
            }

        });
        sides.innerHTML +=info;

        var check = '';

        if(response.is_main == true){
            check = 'checked';
        }

        var isMain = document.createElement('label');
        isMain.setAttribute('class', 'form-group float-left is-main-image');
        isMain.innerHTML = '<input class="is-main" type="radio" name="isMani" onclick="imageToMain('+response.id+')" ' +
            check +
            '> Is Main';

        file.previewTemplate.appendChild(edit);
        file.previewTemplate.appendChild(isMain);
        file.previewTemplate.appendChild(sides);
    });

    /**
     * Get Images
     */
    function ajaxImages() {
        jQuery.ajax({
            url: env+"/api/admins/"+ rl +"/images",
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            async: false,
            success: function (resultData) {
                $.each(resultData, function (kay, val) {
                    position++;
                    var mockFile = { name: 'image-'+position, size: val.id, objectId:val.id, position:position,  isMain:val.is_main, side:convertSide(val.side) };
                    images.push(mockFile);

                    myDropzone.options.addedfile.call(myDropzone, mockFile);

                    myDropzone.emit("thumbnail", mockFile, val.download_link);

                    var edit = document.createElement('button');
                    edit.setAttribute('class', 'edit-btn text-info');
                    edit.setAttribute('type',"button");
                    edit.setAttribute('onclick', "editImage("+val.id+")");
                    edit.innerHTML = '<i class="fa fa-crop fa-fw"></i>';

                    var arraySides = ['left', 'right', 'front', 'back', 'inside', 'panorama', 'other'];

                    var sides = document.createElement('div');
                    sides.setAttribute('class', 'form-group image-side');
                    sides.innerHTML =''  ;
                    var info = '<label for="sel1">Side:</label><select class="form-control" onchange="changeSide('+val.id+', this.value)">';
                    $.each(arraySides, function (key, value) {
                        var isSelectrd = '';
                        if(key == val.side){
                            isSelectrd ='selected';
                        }
                        info += '<option value="'+key+'" '+isSelectrd+'>'+value+'</option>';
                        if(key == (arraySides.length -1)){
                            info+='</select>';
                        }

                    });
                    sides.innerHTML +=info;

                    var check = '';

                    if(val.is_main == true){
                        check = 'checked';
                    }

                    var isMain = document.createElement('label');
                    isMain.setAttribute('class', 'form-group float-left is-main-image');
                    isMain.innerHTML = '<input class="is-main" type="radio" name="isMani" onclick="imageToMain('+val.id+')" ' +
                        check +
                        '> Is Main';


                    $(".dz-preview")[kay].appendChild(edit);
                    $(".dz-preview")[kay].appendChild(isMain);
                    $(".dz-preview")[kay].appendChild(sides);
                });


            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR, textStatus, errorThrown);
            }
        });
    }

    /**
     * Delete Images
     */
    function ajaxDeleteImage(img_id) {
        jQuery.ajax({
            url: env+"/api/admins/"+img_id+"/delete/images",
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            async: true,
            success: function (resultData) {

            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR, textStatus, errorThrown);
            }
        });
    }

    function editImage(imag_id) {

        jQuery.ajax({
            url: env+"/api/admins/"+ imag_id +"/image",
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            async: true,
            success: function (resultData) {
                $('#myModalLabel').text('Edit '+ resultData.file_original_name );
                $('#imagemodal .modal-body').html('<img id="image-'+ resultData.id +'" style="max-width: 100%" src="'+ resultData.download_link +'">');
                $('#imagemodal').modal('show');
                initEditor(resultData.id);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR, textStatus, errorThrown);
            }
        });
    }

    function imageToMain(imag_id) {

        jQuery.ajax({
            url: env+"/api/admins/"+ imag_id +"/image/main",
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            async: true,
            success: function (resultData) {
                $('#image-dropzone').html('<input type="hidden" name="position">' +
                    '<div class="dz-default dz-message"></div>');
                ajaxImages();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR, textStatus, errorThrown);
            }
        });
    }

    function initEditor(elemId) {

        var dkrm = new Darkroom('#image-'+elemId, {
            // Size options
            minWidth: 100,
            minHeight: 100,
            maxWidth: 600,
            maxHeight: 500,
            ratio: 4/3,
            backgroundColor: '#000',

            // Plugins options
            plugins: {
                //save: false,
                crop: {
                    quickCropKey: 67, //key "c"
                    //minHeight: 50,
                    //minWidth: 50,
                    ratio: 4/2
                },
                save: {
                    callback: function() {
                        $("#sortable").sortable("enable");
                        this.darkroom.selfDestroy();
                        var newImage = dkrm.canvas.toDataURL();
                        fileStorageLocation = newImage;

                        jQuery.ajax({
                            url: env+'/api/admins/edits/images',
                            type: "POST",
                            contentType: 'application/json; charset=utf-8',
                            async: true,
                            dataType:"json",
                            data: JSON.stringify({
                                "imageId": elemId,
                                "image": newImage
                            }),
                            success:function(ansvwe)
                            {
                                $('#image-dropzone').html('<input type="hidden" name="position">' +
                                    '<div class="dz-default dz-message"></div>');
                                ajaxImages();
                            }
                        });
                    }
                },
            },

            // Post initialize script
            initialize: function() {
                var cropPlugin = this.plugins['crop'];
                cropPlugin.selectZone(10, 10, 1200, 900);
            },
        });

    }

    function convertSide(number) {

        var side = '';
        switch(number) {
            case 0:
                side ='Left';
                break;
            case 1:
                side='Right';
                break;
            case 2:
                side='Front';
                break;
            case 3:
                side='Back';
                break;
            case 4:
                side='Inside';
                break;
            case 5:
                side='Panorama';
                break;
            case 6:
                side='Other';
                break;
            default:
                side = number;
                break;
        }

        return side;
    }

    /**
     * this function used to change image side
     *
     * @param image
     * @param side
     */
    function changeSide(image, side) {

        jQuery.ajax({
            url: env+"/api/admins/"+image+"/images/"+parseInt(side)+"/side",
            type: "GET",
            contentType: 'application/json; charset=utf-8',
            async: true,
            success: function (resultData) {
                $('#image-dropzone').html('<input type="hidden" name="position">' +
                    '<div class="dz-default dz-message"></div>');
                ajaxImages();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR, textStatus, errorThrown);
            }
        });
    }

</script>

<script type="text/javascript" src="{{ asset('bundles/app/admin/parent.js') }}"></script>
</body>
</html>
